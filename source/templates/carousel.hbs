{{>header}}
  
  <div class="carousel-container">
    <div class="carousel animals" id="initCarousel">
      <ul>
      {{#items}}
        <li class="carousel-slide"><span>{{@index}}</span><img alt="" src="images/carousel-imgs/{{this}}.jpg" /></li>
      {{/items}}
      </ul>
    </div>
  
    <div class="carousel-status">
      <button id="carouselPrev">Prev</button>
      <button id="carouselNext">Next</button>
      <button id="carouselAutoplayStart">Autoplay START</button>
      <button id="carouselAutoplayStop">Autoplay STOP</button>
      <p>This carousel <span class="hide-desktop">ðŸ‘†</span> <span class="hide-mobile">ðŸ‘ˆ</span> is initialized via Javascript and has dot navigation, arrow keys and is an infinite carousel. ðŸ˜Ž</p>
      <p>It has a callback function that updates the current index.</p>
      Current Index: <span id="indexNum">0</span>
    </div>
  </div>

  <div class="fixer" style="height:20px;"></div>

  <div class="carousel-container">
    <div class="carousel animals" data-carousel="autoplay:true:dots:true">
      <ul>
      {{#items}}
        <li class="carousel-slide"><img alt="" src="images/carousel-imgs/{{this}}.jpg" /></li>
      {{/items}}
      </ul>
    </div>

    <div class="carousel-status">
      <p>This carousel <span class="hide-desktop">ðŸ‘†</span> <span class="hide-mobile">ðŸ‘ˆ</span> is initialized via data-carousel attribute and has dots and autoplay turned on.</p>

    </div>
  </div>

  <div class="notes" id="notes">
    <h3>Notes</h3>
    <ul>
      <li>Setting a width on the carousel is ideal.</li>
      <li>Changing slide index when autoplay is on disables autoplay function.</li>
      <li>
        You can use custom events to know when a carousel is:<br>
        initialized, next / prev function, slide and/or animation of slide is complete.
      </li>
    </ul>
  </div>

{{#> footer}}
  <script>
    var carousel = new ML.Carousel(ML.El.$q('#initCarousel'), {
      dots: true,
      arrowKeys: true,
      infinite: true
    }, function(index) {
      ML.El.$q('#indexNum').innerHTML = index;
    })

    ML.El.evt(ML.El.$q('#carouselNext'), 'click', function(e) {
      carousel.next();
    });

    ML.El.evt(ML.El.$q('#carouselPrev'), 'click', function(e) {
      carousel.prev();
    });

    ML.El.evt(ML.El.$q('#carouselAutoplayStart'), 'click', function(e) {
      carousel.autoplay(true);
    });

    ML.El.evt(ML.El.$q('#carouselAutoplayStop'), 'click', function(e) {
      carousel.autoplay(false);
    });

    carousel.init();
  </script>
{{/footer}}